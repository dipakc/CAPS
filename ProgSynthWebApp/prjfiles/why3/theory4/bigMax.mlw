
module BigMax

	use import int.Int
	(*use import int.MinMax*)
	use HighOrd as HO

	use import capsUtil.CapsUtil as CapsUtil	
	
	constant bigMax: (int -> bool) -> (int -> int) -> int

	function max(x y: int): int = if (x > y) then x else y
	
	axiom onePointMax:
		forall r: int -> bool, t: int -> int, x: int.
			one_point r x -> 
				bigMax r t = t x 
		
	axiom splitRangeMax:
		forall r r1 r2: int -> bool, t t1 t2: int -> int.
			non_empty_range r -> non_empty_range r1 -> non_empty_range r2 ->
			is_union_of r r1 r2 ->
			are_same t t1 -> are_same t t2 ->
				bigMax r t = max (bigMax r1 t1) (bigMax r2 t2)		

	axiom splitRangeRightMax:
		forall r r1: int -> bool, t t1 t2: int -> int, v: int.
			non_empty_range r -> non_empty_range r1 ->
			is_union_of_v r r1 v ->
			are_same t t1 -> are_same t t2 ->
				bigMax r t = max (bigMax r1 t1) (t2 v)
		
end
